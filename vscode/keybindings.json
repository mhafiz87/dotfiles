// Place your key bindings in this file to override the defaults
[
  // Toggle Light | Dark Mode
  {
    "key": "F2",
    "command": "toggle",
    "args": {
      "id": "darklight",
      "value": [
        {
          "workbench.colorTheme": "Default Dark Modern"
        },
        {
          "workbench.colorTheme": "Default Light Modern"
        }
      ]
    }
  },
  // Toggle Relative Line Number
  {
    "key": "F4",
    "command": "toggle",
    "args": {
      "id": "linenumbers",
      "value": [
        {
          "editor.lineNumbers": "on"
        },
        {
          "editor.lineNumbers": "relative"
        }
      ]
    }
  },
  // quick open navigation
  {
      "key": "ctrl+n",
      "command": "workbench.action.quickOpenSelectNext",
      "when": "inQuickOpen"
  },
  {
      "key": "ctrl+p",
      "command": "workbench.action.quickOpenSelectPrevious",
      "when": "inQuickOpen"
  },
  {
      "key": "ctrl+n",
      "command": "extension.vim_ctrl+n",
      "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode' && !inQuickOpen"
  },
  {
      "key": "ctrl+n",
      "command": "goToNextReference",
      "when": "referenceSearchVisible",
  },
  {
      "key": "ctrl+p",
      "command": "goToPreviousReference",
      "when": "referenceSearchVisible",
  },
  // Navigate Open Files
  {
      "key": "ctrl+tab",
      "command": "workbench.action.nextEditor",
  },
  {
      "key": "ctrl+shift+tab",
      "command": "workbench.action.previousEditor",
  },
  // Font Zoom
  {
      "key": "ctrl+=",
      "command": "editor.action.fontZoomIn",
      "when": "editorTextFocus"
  },
  {
      "key": "ctrl+-",
      "command": "editor.action.fontZoomOut",
      "when": "editorTextFocus"
  },
  {
      "key": "ctrl+=",
      "command": "workbench.action.terminal.fontZoomIn",
      "when": "terminalFocus"
  },
  {
      "key": "ctrl+-",
      "command": "workbench.action.terminal.fontZoomOut",
      "when": "terminalFocus"
  },
  // Select Suggestion Using Tab
  {
      "key": "tab",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
      "key": "shift+tab",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  // Sidebar
  {
      "key": "ctrl+b",
      "command": "workbench.action.toggleSidebarVisibility",
  },
  {
      "key": "ctrl+b",
      "command": "workbench.action.focusSideBar",
      "when": "editorTextFocus",
  },
  {
      "key": "ctrl+b",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "editorFocus && sideBarVisible"
  },
  // Panel
  {
      "key": "ctrl+alt+m",
      "command": "workbench.action.toggleMaximizedPanel",
      "when": "terminalFocus"
  },
  // Terminal
  {
      "key": "ctrl+shift+x",
      "command": "workbench.action.terminal.kill",
      "when": "terminal.active"
  },
  // explorer
  {
    "key": "a",
    "command": "workbench.files.action.createFileFromExplorer",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f",
    "command": "workbench.files.action.createFolderFromExplorer",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "moveFileToTrash",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "g y",
    "command": "copyFilePath",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "copyRelativeFilePath",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // Remove Vim Keybindings
  {
    "key": "ctrl+pagedown",
    "command": "-extension.vim_ctrl+pagedown",
    "when": "editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"
  },
  {
    "key": "ctrl+pageup",
    "command": "-extension.vim_ctrl+pageup",
    "when": "editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"
  },
  {
    "key": "ctrl+b",
    "command": "-extension.vim_ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+backspace",
    "command": "-extension.vim_ctrl+backspace",
    "when": "editorTextFocus && vim.active && vim.use<C-BS> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+6",
    "command": "-extension.vim_ctrl+6",
    "when": "editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"
  },
  {
    "key": "ctrl+space",
    "command": "-extension.vim_ctrl+space",
    "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
]
