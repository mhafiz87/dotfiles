{
  // Language
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[lua]": {
    "editor.defaultFormatter": "JohnnyMorganz.stylua"
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "[python]": {
    "editor.codeActionsOnSave": {
      // "source.organizeImports": "explicit",
      "source.fixAll.ruff": "explicit",
      "source.organizeImports.ruff": "explicit"
    },
    "editor.defaultFoldingRangeProvider": "zokugun.explicit-folding",
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "modificationsIfAvailable",
    "editor.rulers": [
      {
        "column": 80,
        "color": "#ffa500a0"
      },
      {
        "column": 88, // Default Black column length
        "color": "#ff0000a0"
      }
      // {
      //     "column": 120,
      //     "color": "#c4000090"
      // }
    ],
    "explicitFolding.rules": [
      {
        "beginRegex": "\"\"\"|'''",
        "endRegex": "\"\"\"|'''",
        "autoFold": true
      },
      {
        "indentation": true,
        "offSide": true
      }
    ],
  },
  "isort.args": [
    "--profile",
    "black"
  ],
  "jupyter.interactiveWindow.creationMode": "perFile",
  "markdownlint.config": {
    "MD033": false
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "notebook.lineNumbers": "on",
  "python.analysis.diagnosticMode": "openFilesOnly",
  "python.languageServer": "Pylance",
  "ruff.fixAll": true,
  "ruff.lineLength": 88,
  "ruff.lint.select": [
    "C",
    "E",
    "F",
    "W"
  ],
  "ruff.organizeImports": true,

  // VS Code
  "diffEditor.renderSideBySide": true,
  "editor.cursorBlinking": "blink",
  "editor.cursorStyle": "block",
  "editor.definitionLinkOpensInPeek": false,
  "editor.detectIndentation": true,
  "editor.foldingImportsByDefault": false,
  "editor.foldingStrategy": "auto",
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.fontLigatures": true,
  "editor.fontSize": 12,
  "editor.formatOnSave": false,
  "editor.guides.bracketPairs": "active",
  "editor.guides.bracketPairsHorizontal": true,
  "editor.insertSpaces": true,
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.multiCursorPaste": "full",
  "editor.showFoldingControls": "always",
  "editor.snippetSuggestions": "bottom",
  "editor.suggestSelection": "first",
  "editor.tabSize": 4,
  "explorer.confirmDelete": false,
  "files.exclude": {
    "**/.DS_Store": true,
    "**/.git": false,
    "**/.hg": true,
    "**/.svn": true,
    "**/*.bkp": true,
    "**/CVS": true
  },
  "editor.cursorSurroundingLines": 10,
  "files.trimTrailingWhitespace": true,
  "telemetry.telemetryLevel": "off",
  "terminal.integrated.cwd": "${cwd}",
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "terminal.integrated.fontSize": 12,
  "window.commandCenter": false,
  "window.density.editorTabHeight": "compact",
  "window.menuBarVisibility": "compact",
  "window.newWindowProfile": "Default",
  "window.restoreWindows": "none",
  "workbench.colorTheme": "Default Dark Modern",
  "workbench.editor.showTabs": "multiple",
  "workbench.editor.enablePreview": false,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.panel.defaultLocation": "bottom",
  "workbench.startupEditor": "none",
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    }
  },
  "zenMode.hideLineNumbers": false,
  "zenMode.hideStatusBar": false,
  "zenMode.restore": false,

  // 3rd Party
  "autoDocstring.docstringFormat": "google",
  "autoDocstring.quoteStyle": "\"\"\"",
  "autoDocstring.customTemplatePath": "D:\\repo\\orbital-runtime\\orbital_docstring.mustache",
  "explicitFolding.autoFold": "comments",
  "gotoNextPreviousMember.symbolKinds": [
    "class",
    "function",
    "method"
  ],
  "hediet.vscode-drawio.resizeImages": null,
  "python.analysis.typeCheckingMode": "standard",

  // Vim
  "vim.cursorStylePerMode.insert": "line",
  "vim.cursorStylePerMode.normal": "block",
  "vim.disableExtension": false,
  "vim.easymotion": true,
  "vim.foldfix": false,
  "vim.highlightedyank.color": "rgba(250, 240, 170, 1)",
  "vim.highlightedyank.duration": 200,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.textColor": "#202020",
  "vim.hlsearch": true,
  "vim.incsearch": true,
  // "vim.leader": "<space>",
  "vim.surround": true,
  "vim.smartRelativeLine": true,
  "vim.statusBarColorControl": true,
  "vim.statusBarColors.normal": [ "#1F1F1F", "#ffffff" ],
  "vim.statusBarColors.insert": [ "#90EE90", "#000000" ],
  "vim.statusBarColors.visual": [ "#FFD700", "#000000" ],
  "vim.statusBarColors.visualline": [ "#FFD700", "#000000" ],
  "vim.statusBarColors.visualblock": [ "#FFD700", "#000000" ],
  "vim.statusBarColors.commandlineinprogress": [ "#B22222", "#ffffff" ],
  "vim.statusBarColors.searchinprogressmode": [ "#171819", "#ffffff" ],
  "vim.statusBarColors.surroundinputmode": [ "#171819", "#ffffff" ],
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,

  // Vim Keybind
  "vim.insertModeKeyBindings": [
    {
      "before": [ "j", "k" ],
      "after": [ "<Esc>" ]
    }
  ],
  "vim.commandLineModeKeyBindingsNonRecursive": [
    {
      "before": [ "j", "k" ],
      "after": [ "<Esc>" ]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
    // Half Page Navigation Then Re-Centre
    {
      "before": [ "<C-d>" ],
      "after": [ "<C-d>", "z", "z" ]
    },
    {
      "before": [ "<C-u>" ],
      "after": [ "<C-u>", "z", "z" ]
    },
    // Search Then Re-Centre
    {
      "before": [ "n" ],
      "after": [ "n", "z", "z", "z", "v" ]
    },
    {
      "before": [ "N" ],
      "after": [ "N", "z", "z", "z", "v" ]
    },
    // Exit Dirty Diff
    {
      "before": [ "<Esc>" ],
      "commands": [
        {
          "command": "closeQuickDiff",
          "when": "editorFocus && dirtyDiffVisible"
        },
        {
          "command": "closeMarkersNavigation",
          "when": "editorFocus && markersNavigationVisible"
        }
      ]
    },
    // LSP - Peek Definition
    {
      "before": [ "<S-k>" ],
      "commands": [
        {
          "command": "editor.action.showDefinitionPreviewHover",
          "when": "editorHasDefinitionProvider && editorTextFocus"
        }
      ]
    },
    // LSP - References
    {
      "before": [ "g", "r" ],
      "commands": [ "editor.action.referenceSearch.trigger" ]
    },
    // LSP - Implementation
    {
      "before": [ "g", "i" ],
      "commands": [
        {
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        }
      ]
    },
    // Go To Next Diagnostic
    {
      "before": [ "[", "d" ],
      "commands": [
        {
          "command": "editor.action.marker.prev"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    },
    {
      "before": [ "[", "5" ],
      "commands": [
        {
          "command": "editor.action.marker.prev"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    },
    // Go To Previous Diagnostic
    {
      "before": [ "]", "d" ],
      "commands": [
        {
          "command": "editor.action.marker.next"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    },
    {
      "before": [ "]", "5" ],
      "commands": [
        {
          "command": "editor.action.marker.next"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    },
    // Go To Next / Previous Member
    {
      "before": [ "]", "m" ],
      "commands": [
        {
          "command": "gotoNextPreviousMember.nextMember"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    },
    {
      "before": [ "]", "-" ],
      "commands": [
        {
          "command": "gotoNextPreviousMember.nextMember"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    },
    {
      "before": [ "[", "m" ],
      "commands": [
        {
          "command": "gotoNextPreviousMember.previousMember"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    },
    {
      "before": [ "[", "-" ],
      "commands": [
        {
          "command": "gotoNextPreviousMember.previousMember"
        },
        {
          "command": "center-editor-window.center"
        }
      ]
    }
    // Does not work when using with which key extension
    // Move line below to the end of current line while maintaining cursor position
    // {
    //   "before": [ "<S-j>" ],
    //   "after": [ "m", "z", "J", "`", "z" ]
    // },
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
    // Allow tab line multiple times
    {
      "before": [ ">" ],
      "after": [ ">", "g", "v" ]
    },
    // Allow tab line multiple times
    {
      "before": [ "<" ],
      "after": [ "<", "g", "v" ]
    },
    {
      "before": [ "p" ],
      "after": [ "\"", "_", "d", "P" ]
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<C-w>": false,
    "<C-p>": false
  },

  // Vim Which Key
  "whichkey.bindingOverrides": [
    // Does not work when using with which key extension
    {
      "keys": "J",
      "name": "Move line below to the end of current line",
      "type": "command",
      "command": "vim.remap",
      "args": {
        "after": ["m", "z",  "J", "`", "z"] }
    },
  ],
  "whichkey.bindings": [
    {
      "key": " ",
      "name": "+EasyMotion",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "+EasyMotion",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>", "<leader>", "s"
            ]
          }
        }
      ]
    },
    {
      "key": ";",
      "name": "Commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "\t",
      "name": "Last editor",
      "type": "commands",
      "commands": [
        "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "list.select"
      ]
    },
    {
      "key": "?",
      "name": "Search keybindings",
      "type": "command",
      "command": "whichkey.searchBindings"
    },
    {
      "key": ".",
      "name": "Repeat most recent action",
      "type": "command",
      "command": "whichkey.repeatMostRecent"
    },
    {
      "key": "b",
      "name": "+Buffers/Editors",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "B",
          "name": "Show all buffers/editors in active group",
          "type": "command",
          "command": "workbench.action.showEditorsInActiveGroup"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "H",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "J", "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "K",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "L",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "M",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "P",
          "name": "Paste clipboard to buffer",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardPasteAction"
          ]
        },
        {
          "key": "Y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "c",
      "name": "+[C]lear High[l]ight",
      "type": "bindings",
      "bindings": [
        {
          "key": "l",
          "name": "[C]lear High[l]ight",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [":", "n", "o", "h", "l", "<Enter>"]
          }
        }
      ]
    },
    {
      "key": "d",
      "name": "+Debug",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "D",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "+Errors",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "Error transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.error"
        },
        {
          "key": "l",
          "name": "List errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "N",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        },
        {
          "key": "n",
          "name": "Next error",
          "type": "command",
          "command": "editor.action.marker.next"
        },
        {
          "key": "p",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        }
      ]
    },
    {
      "key": "f",
      "name": "+File",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Open file",
          "type": "command",
          "command": "whichkey.openFile"
        },
        {
          "key": "F",
          "name": "Open filefolder",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "n",
          "name": "New Untitled",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "w",
          "name": "Open active in new window",
          "type": "command",
          "command": "workbench.action.files.showOpenedFileInNewWindow"
        },
        {
          "key": "s",
          "name": "Save file",
          "type": "command",
          "command": "workbench.action.files.save"
        },
        {
          "key": "S",
          "name": "Save all files",
          "type": "command",
          "command": "workbench.action.files.saveAll"
        },
        {
          "key": "r",
          "name": "Open recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "R",
          "name": "Rename file",
          "type": "commands",
          "commands": [
            "workbench.files.action.showActiveFileInExplorer",
            "renameFile"
          ]
        },
        {
          "key": "t",
          "name": "Show tree/explorer view",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "T",
          "name": "Show active file in tree/explorer view",
          "type": "command",
          "command": "workbench.files.action.showActiveFileInExplorer"
        },
        {
          "key": "y",
          "name": "Copy path of active file",
          "type": "command",
          "command": "workbench.action.files.copyPathOfActiveFile"
        },
        {
          "key": "o",
          "name": "Open with",
          "type": "command",
          "command": "explorer.openWith"
        },
        {
          "key": "l",
          "name": "Change file language",
          "type": "command",
          "command": "workbench.action.editor.changeLanguageMode"
        },
        {
          "key": "=",
          "name": "Format file",
          "type": "command",
          "command": "editor.action.formatDocument"
        },
        {
          "key": "i",
          "name": "+Indentation",
          "type": "bindings",
          "bindings": [
            {
              "key": "i",
              "name": "Change indentation",
              "type": "command",
              "command": "changeEditorIndentation"
            },
            {
              "key": "d",
              "name": "Detect indentation",
              "type": "command",
              "command": "editor.action.detectIndentation"
            },
            {
              "key": "r",
              "name": "Reindent",
              "type": "command",
              "command": "editor.action.reindentlines"
            },
            {
              "key": "R",
              "name": "Reindent selected",
              "type": "command",
              "command": "editor.action.reindentselectedlines"
            },
            {
              "key": "t",
              "name": "Convert indentation to tabs",
              "type": "command",
              "command": "editor.action.indentationToTabs"
            },
            {
              "key": "s",
              "name": "Convert indentation to spaces",
              "type": "command",
              "command": "editor.action.indentationToSpaces"
            }
          ]
        }
      ]
    },
    {
      "key": "g",
      "name": "+Git/GoTo",
      "type": "bindings",
      "bindings": [
        {
          "key": "h",
          "name": "hunk",
          "type": "command",
          "command": "whichkey.showTransient",
          "args":{
            "title": "Git Hunk",
            "bindings": [
              {
                "key": "n",
                "name": "next hunk",
                "type": "commands",
                "commands": [
                  "editor.action.dirtydiff.next",
                  "center-editor-window.center"
                ]
              },
              {
                "key": "p",
                "name": "previous hunk",
                "type": "commands",
                "commands": [
                  "editor.action.dirtydiff.previous",
                  "center-editor-window.center"
                ]
              }
            ]
          }
        },
      ]
    },
    {
      "key": "i",
      "name": "+Insert",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "p",
      "name": "+Project",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Find file in project",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "p",
          "name": "Switch project",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "t",
          "name": "Show tree/explorer view",
          "type": "command",
          "command": "workbench.view.explorer"
        }
      ]
    },
    {
      "key": "r",
      "name": "+Repeat",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "Repeat recent actions",
          "type": "command",
          "command": "whichkey.repeatRecent"
        }
      ]
    },
    {
      "key": "s",
      "name": "+Search/Symbol",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Edit symbol",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "h",
          "name": "Highlight symbol transient",
          "type": "commands",
          "commands": [
            "editor.action.wordHighlight.trigger",
            "whichkey.showTransient"
          ],
          "args": [
            null,
            "whichkey.transient.symbol"
          ]
        },
        {
          "key": "j",
          "name": "Jump to symbol in file",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "J",
          "name": "Jump to symbol in workspace",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        },
        {
          "key": "p",
          "name": "Search in a project",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "P",
          "name": "Search in a project with a selection",
          "type": "commands",
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "workbench.action.findInFiles"
          ]
        },
        {
          "key": "r",
          "name": "Search all references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "R",
          "name": "Search all references in side bar",
          "type": "command",
          "command": "references-view.find"
        },
        {
          "key": "s",
          "name": "Search in current file",
          "type": "command",
          "command": "actions.find"
        }
      ]
    },
    {
      "key": "S",
      "name": "+Show",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "+Toggles",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Toggle find case sensitive",
          "type": "command",
          "command": "toggleFindCaseSensitive"
        },
        {
          "key": "w",
          "name": "Toggle ignore trim whitespace in diff",
          "type": "command",
          "command": "toggle.diff.ignoreTrimWhitespace"
        },
        {
          "key": "W",
          "name": "Toggle word wrap",
          "type": "command",
          "command": "editor.action.toggleWordWrap"
        }
      ]
    },
    {
      "key": "T",
      "name": "+UI toggles",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        },
        {
          "key": "z",
          "name": "Toggle zen mode",
          "type": "command",
          "command": "workbench.action.toggleZenMode"
        }
      ]
    },
    {
      "key": "w",
      "name": "+Window",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "-",
          "name": "Split editor below",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "/",
          "name": "Split editor right",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "s",
          "name": "Split editor below",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "v",
          "name": "Split editor right",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "h",
          "name": "Focus editor group left",
          "type": "command",
          "command": "workbench.action.focusLeftGroup"
        },
        {
          "key": "j",
          "name": "Focus editor group down",
          "type": "command",
          "command": "workbench.action.focusBelowGroup"
        },
        {
          "key": "k",
          "name": "Focus editor group up",
          "type": "command",
          "command": "workbench.action.focusAboveGroup"
        },
        {
          "key": "l",
          "name": "Focus editor group right",
          "type": "command",
          "command": "workbench.action.focusRightGroup"
        },
        {
          "key": "H",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "J",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "K",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "L",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "+Text",
      "type": "bindings",
      "bindings": [
        {
          "key": "i",
          "name": "Organize Imports",
          "type": "command",
          "command": "editor.action.organizeImports"
        },
        {
          "key": "r",
          "name": "Rename symbol",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "R",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor"
        },
        {
          "key": ".",
          "name": "Quick fix",
          "type": "command",
          "command": "editor.action.quickFix"
        },
        {
          "key": "a",
          "name": "Find all references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "u",
          "name": "To lower case",
          "type": "command",
          "command": "editor.action.transformToLowercase"
        },
        {
          "key": "U",
          "name": "To upper case",
          "type": "command",
          "command": "editor.action.transformToUppercase"
        },
        {
          "key": "J",
          "name": "Move lines down transient",
          "type": "commands",
          "commands": [
            "editor.action.moveLinesDownAction",
            "whichkey.showTransient"
          ],
          "args": [
            null,
            "whichkey.transient.lineMoving"
          ]
        },
        {
          "key": "K",
          "name": "Move lines up transient",
          "type": "commands",
          "commands": [
            "editor.action.moveLinesUpAction",
            "whichkey.showTransient"
          ],
          "args": [
            null,
            "whichkey.transient.lineMoving"
          ]
        },
        {
          "key": "l",
          "name": "+Lines",
          "type": "bindings",
          "bindings": [
            {
              "key": "s",
              "name": "Sort lines in ascending order",
              "type": "command",
              "command": "editor.action.sortLinesAscending"
            },
            {
              "key": "S",
              "name": "Sort lines in descending order",
              "type": "command",
              "command": "editor.action.sortLinesDescending"
            },
            {
              "key": "d",
              "name": "Duplicate lines down",
              "type": "command",
              "command": "editor.action.copyLinesDownAction"
            },
            {
              "key": "D",
              "name": "Duplicate lines up",
              "type": "command",
              "command": "editor.action.copyLinesUpAction"
            }
          ]
        },
        {
          "key": "d",
          "name": "+Delete",
          "type": "bindings",
          "bindings": [
            {
              "key": "w",
              "name": "Delete trailing whitespace",
              "type": "command",
              "command": "editor.action.trimTrailingWhitespace"
            }
          ]
        },
        {
          "key": "m",
          "name": "+Merge conflict",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Accept both",
              "type": "command",
              "command": "merge-conflict.accept.both"
            },
            {
              "key": "c",
              "name": "Accept current",
              "type": "command",
              "command": "merge-conflict.accept.current"
            },
            {
              "key": "i",
              "name": "Accept incoming",
              "type": "command",
              "command": "merge-conflict.accept.incoming"
            },
            {
              "key": "B",
              "name": "Accept all both",
              "type": "command",
              "command": "merge-conflict.accept.all-both"
            },
            {
              "key": "C",
              "name": "Accept all current",
              "type": "command",
              "command": "merge-conflict.accept.all-current"
            },
            {
              "key": "I",
              "name": "Accept all incoming",
              "type": "command",
              "command": "merge-conflict.accept.all-incoming"
            },
            {
              "key": "s",
              "name": "Accept selection",
              "type": "command",
              "command": "merge-conflict.accept.selection"
            },
            {
              "key": "k",
              "name": "Compare current conflict",
              "type": "command",
              "command": "merge-conflict.compare"
            },
            {
              "key": "n",
              "name": "Next Conflict",
              "type": "command",
              "command": "merge-conflict.next"
            },
            {
              "key": "N",
              "name": "Previous Conflict",
              "type": "command",
              "command": "merge-conflict.previous"
            }
          ]
        }
      ]
    },
    {
      "key": "z",
      "name": "+Zoom/Fold",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "+Fold",
          "type": "bindings",
          "bindings": [
            {
              "key": "a",
              "name": "Toggle: around a point",
              "type": "command",
              "command": "editor.toggleFold"
            },
            {
              "key": "c",
              "name": "Close: at a point",
              "type": "command",
              "command": "editor.fold"
            },
            {
              "key": "b",
              "name": "Close: all block comments",
              "type": "command",
              "command": "editor.foldAllBlockComments"
            },
            {
              "key": "g",
              "name": "Close: all regions",
              "type": "command",
              "command": "editor.foldAllMarkerRegions"
            },
            {
              "key": "m",
              "name": "Close: all",
              "type": "command",
              "command": "editor.foldAll"
            },
            {
              "key": "o",
              "name": "Open: at a point",
              "type": "command",
              "command": "editor.unfold"
            },
            {
              "key": "O",
              "name": "Open: recursively",
              "type": "command",
              "command": "editor.unfoldRecursively"
            },
            {
              "key": "G",
              "name": "Open: all regions",
              "type": "command",
              "command": "editor.unfoldAllMarkerRegions"
            },
            {
              "key": "r",
              "name": "Open: all",
              "type": "command",
              "command": "editor.unfoldAll"
            }
          ]
        },
        {
          "key": "f",
          "name": "Frame zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.frameZooming"
        },
        {
          "key": "x",
          "name": "Font zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.fontZooming"
        },
        {
          "key": "i",
          "name": "Image zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.imageZooming"
        }
      ]
    },
    {
      "key": "!",
      "name": "Show terminal",
      "type": "command",
      "command": "workbench.action.terminal.focus"
    },
    {
      "key": "/",
      "name": "Search in a project",
      "type": "command",
      "command": "workbench.action.findInFiles"
    },
    {
      "key": "*",
      "name": "Search in a project with a selection",
      "type": "commands",
      "commands": [
        "editor.action.addSelectionToNextFindMatch",
        "workbench.action.findInFiles"
      ]
    },
    {
      "key": "v",
      "name": "Smart select/expand region transient",
      "type": "commands",
      "commands": [
        "editor.action.smartSelect.grow",
        "whichkey.showTransient"
      ],
      "args": [
        null,
        "whichkey.transient.smartExpand"
      ]
    },
    {
      "key": "1",
      "name": "Focus 1st editor group",
      "type": "command",
      "command": "workbench.action.focusFirstEditorGroup"
    },
    {
      "key": "2",
      "name": "Focus 2nd editor group",
      "type": "command",
      "command": "workbench.action.focusSecondEditorGroup"
    },
    {
      "key": "3",
      "name": "Focus 3rd editor group",
      "type": "command",
      "command": "workbench.action.focusThirdEditorGroup"
    },
    {
      "key": "4",
      "name": "Focus 4th editor group",
      "type": "command",
      "command": "workbench.action.focusFourthEditorGroup"
    },
    {
      "key": "5",
      "name": "Focus 5th editor group",
      "type": "command",
      "command": "workbench.action.focusFifthEditorGroup"
    },
    {
      "key": "6",
      "name": "Focus 6th editor group",
      "type": "command",
      "command": "workbench.action.focusSixthEditorGroup"
    },
    {
      "key": "7",
      "name": "Focus 7th editor group",
      "type": "command",
      "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
      "key": "8",
      "name": "Focus 8th editor group",
      "type": "command",
      "command": "workbench.action.focusEighthEditorGroup"
    },
  ],


  // Auto Update
  "editor.lineNumbers": "relative",
  "workbench.colorCustomizations": {
    "statusBar.background": "#1F1F1F",
    "statusBar.noFolderBackground": "#1F1F1F",
    "statusBar.debuggingBackground": "#1F1F1F",
    "statusBar.foreground": "#ffffff",
    "statusBar.debuggingForeground": "#ffffff"
  },
  "extensions.ignoreRecommendations": true,
}
