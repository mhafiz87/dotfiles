{
    "judgement data template": {
        "prefix": "judgement data template",
        "body": [
            "\tJudgement.${1:_TEMPLATE}: {",
            "\t\ttuple(${2:[CN.BLUEFIN]}): {  # Put project in a list if it's single project.",
            "\t\t\t\"method\": \"smart_text_judgement\",",
            "\t\t\t\"args\": {",
            "\t\t\t\t\"area_coordinate\": ${3:\"FULLSCREEN\"},  # record module uses 'area'",
            "\t\t\t\t\"expected_text\": [${4:\"Media Player\", [\"Apps\", \"Your apps\"]}],",
            "\t\t\t\t\"testdesc\": \" ${5:RCBack from Media Player main screen to exit app}\",",
            "\t\t\t\t\"autowaiting\": ${6:False},",
            "\t\t\t\t\"interval\": ${7:0.5},",
            "\t\t\t\t\"timeout\": ${8:10},",
            "\t\t\t\t\"threading\": ${9:False},",
            "\t\t\t},",
            "\t\t\t\"reference\": \"${10}\",",
            "\t\t},",
            "\t\ttuple(${11:CN.AMATI_UI}): {",
            "\t\t\t\"method\": \"picture_judgement\",",
            "\t\t\t\"args\": {",
            "\t\t\t\t\"config_bucket\": ${12:testsystemreq[\"bucket\"]},  # or 'common'",
            "\t\t\t\t\"configjsonfilename\": \"${13:config}.json\",  # record uses json_file",
            "\t\t\t\t\"testdesc\": \"${14:FAIL is pass}\",  # include 'FAIL is pass' if want to use as describe.",
            "\t\t\t},",
            "\t\t\t\"reference\": \"${10}\",",
            "\t\t},",
            "\t},"
        ],
        "description": "Judgement data template for test script config file."
    },
    "orbital test case template": {
        "prefix": "orbital test case template",
        "body": [
            "class ${1:TestClassName}(DefaultTestCase):",
            "\t\"\"\"",
            "\t\"\"\"",
            "\tdef __init__(self, **optional):",
            "\t\tself.test_case_dependent_on = None",
            "\t\tself.supported_projects = [\"all\"]",
            "\t\tself.supported_regions = [\"all\"]",
            "\t\tself.supported_country = [\"all\"]",
            "\t\tself.supported_categories = None",
            "\t\tself.required_hws = None  # ['ac_tv','ac_netswitch','dektec1','dektec2','phone','router','opie']",
            "\t\tself.tc_timeout = 60 * 10",
            "",
            "\tdef testcase_precondition(self):",
            "\t\tsuper().testcase_precondition()",
            "\t\t# Additional code to execute",
            "",
            "\tdef testcase_end(self):",
            "\t\t# Additional code to execute",
            "\t\tsuper().testcase_end()",
            "",
            "\tdef run(self):",
            "\t\tself.judgement_results.append(CN.REPORTING_RESULT_PASS)"
        ],
        "description": "Orbital test case template."
    },
    "orbital docstring": {
        "prefix": "docstring orbital",
        "body": [
            "\"\"\"",
            "Summary:",
            "\tNone",
            "",
            "Description:",
            "\tNone",
            "",
            "Args:",
            "\tNone",
            "",
            "Raises:",
            "\tNone",
            "",
            "Examples:",
            "\t# ",
            "\t>>> ",
            "",
            "Returns:",
            "\tNone",
            "",
            "Caveats:",
            "\tNone",
            "",
            "\"\"\""
        ],
        "description": "Orbital docstring."
    }
}

