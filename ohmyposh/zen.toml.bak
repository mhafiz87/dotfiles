#:schema https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json
# reference: https://github.com/dreamsofautonomy/zen-omp/blob/main/zen.toml

version = 2
final_space = true
console_title_template = '{{ .Shell }} in {{ .Folder }}'
shell_integration = true
auto_upgrade = true

[[blocks]]
  type = 'prompt'
  alignment = 'left'
  newline = true

  [[blocks.segments]]
    type = 'root'
    style = 'plain'
    foreground = 'yellow'
    background = 'transparent'
    template = '│  '

  [[blocks.segments]]
    type = 'os'
    style = 'plain'
    foreground = 'white'
    background = 'transparent'
    template = '│ {{ if .WSL }}WSL at {{ end }}{{.Icon}} '

  [[blocks.segments]]
    type = 'session'
    style = 'plain'
    foreground = 'white'
    background = 'transparent'
    template = '{{ if .SSHSession }}│   {{ .UserName }}{{ end }}'

  [[blocks.segments]]
    type = 'path'
    style = 'plain'
    foreground = 'cyan'
    background = 'transparent'
    template = '│   '

  [[blocks.segments]]
    type = 'path'
    style = 'plain'
    foreground = 'white'
    background = 'transparent'
    template = '{{ path .Path .Location}}'

    [blocks.segments.properties]
      style = 'full'

      [blocks.segments.properties.mapped_locations]
        "~/.config" = " "

  [[blocks.segments]]
    type = 'git'
    style = 'plain'
    foreground = 'white'
    background = 'transparent'
    foreground_templates = [
      '{{ if or (.Working.Changed) (.Staging.Changed) }}#c4a000{{ end }}',
      '{{ if and (gt .Ahead 0) (gt .Behind 0) }}#f26d50{{ end }}',
      '{{ if gt .Ahead 0 }}#89d1dc{{ end }}',
      '{{ if gt .Behind 0 }}#4e9a06{{ end }}'
    ]
    # template = '{{ .UpstreamIcon }}{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}{{ if .Working.Changed }}  {{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }}  {{ .Staging.String }}{{ end }}{{ if gt .StashCount 0 }}  {{ .StashCount }}{{ end }}'
    templates = [
      ' │ {{ .UpstreamIcon }}{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}',
      '{{ if .Working.Changed }}  {{ .Working.String }}{{ end }}',
      '{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}',
      '{{ if .Staging.Changed }}  {{ .Staging.String }}{{ end }}',
      '{{ if gt .StashCount 0 }}  {{ .StashCount }}{{ end }}'
    ]

    [blocks.segments.properties]
      # branch_icon = ' '
      fetch_stash_count = true
      fetch_status = true
      fetch_upstream_icon = true

[[blocks]]
  type = 'prompt'
  alignment = 'right'

  [[blocks.segments]]
    type = 'python'
    style = 'plain'
    foreground = 'yellow'
    background = 'transparent'
    template = ' {{ .Full }}{{ if .Venv }}({{ .Venv }}){{ end }} '

    [blocks.segments.properties]
      display_mode = 'files'

  [[blocks.segments]]
    type = 'node'
    style = 'plain'
    foreground = 'green'
    background = 'transparent'
    template = '│ {{ if .PackageManagerIcon }}{{ .PackageManagerIcon }} {{ end }}{{ .Full }} '

    [blocks.segments.properties]
      display_mode = 'files'

  [[blocks.segments]]
    type = 'go'
    style = 'plain'
    foreground = 'blue'
    background = 'transparent'
    template = '│  '

    [blocks.segments.properties]
      fetch_version = true

  [[blocks.segments]]
    type = 'lua'
    style = 'plain'
    foreground = 'blue'
    background = 'transparent'
    template = '│  {{ .Full }}'

  [[blocks.segments]]
    type = 'shell'
    style = 'plain'
    foreground = 'white'
    background = 'transparent'
    template = '│ <b>{{ .Name }}</b> '

  [[blocks.segments]]
    type = 'time'
    style = 'plain'
    foreground = 'white'
    background = 'transparent'
    template = '│  {{ .CurrentDate | date "15:04:05" }} '

  [[blocks.segments]]
    type = "owm"
    style = "plain"
    foreground = "white"
    background = "transparent"
    template = "│ {{.Weather}} ({{.Temperature}}{{.UnitIcon}})"

    [blocks.segments.properties]
      api_key = "{{ .Env.OpenWeatherMapAPIKey }}"
      location = "{{ .Env.OpenWeatherMapAPILocation }}"
      units = "metric"
      http_timeout = 20
      cache_timeout = 10

  [[blocks.segments]]
    type = "battery"
    style = "plain"
    foreground = "#ffffff"
    foreground_templates  = [
      "{{if eq \"Charging\" .State.String}}#40c4ff{{end}}",
      "{{if eq \"Discharging\" .State.String}}#ff5722{{end}}",
      "{{if eq \"Full\" .State.String}}#4caf50{{end}}"
    ]
    template = "│ {{ if not .Error }}{{ .Icon }}{{ .Percentage }}{{ end }} "

    [blocks.segments.properties]
      discharging_icon = " "
      charging_icon = " "
      charged_icon = " "

[[blocks]]
  type = 'prompt'
  alignment = 'left'
  newline = true

  [[blocks.segments]]
    type  = 'text'
    style  = 'plain'
    foreground_templates = [
      "{{if gt .Code 0}}red{{end}}",
      "{{if eq .Code 0}}white{{end}}",
    ]
    background = 'transparent'
    template = "❯"

[[blocks]]
  type = 'rprompt'
  overflow = 'hidden'

  [[blocks.segments]]
  type = 'text'
  style  = 'plain'
  background = 'transparent'
  foreground_templates = [
    "{{ if gt .Code 0 }}red{{ end }}",
    "{{ if eq .Code 0 }}white{{ end }}",
  ]
  template = '{{ if gt .Code 0 }}✗{{ else }}{{ end }} '

  [[blocks.segments]]
  type = 'executiontime'
  style  = 'plain'
  foreground = 'white'
  background = 'transparent'
  template = '{{ .FormattedMs }}'

    [blocks.segments.properties]
      threshold = 500
      style = "austin"
      always_enabled = true

[transient_prompt]
  foreground_templates = [
    "{{if gt .Code 0}}red{{end}}",
    "{{if eq .Code 0}}white{{end}}",
  ]
  background = 'transparent'
  template = "<b>❯ </b>"

[secondary_prompt]
  foreground = 'white'
  background = 'transparent'
  template = "<b>❯❯ </b>"

[[tooltips]]
type = "git"
tips = [ "git" ]
style = "plain"
foreground = "#fffb38"
background = "transparent"
template = "{{ .HEAD }}{{ if .Staging.Changed }}  {{ .Staging.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Working.Changed }}  {{ .Working.String }}{{ end }}"

  [tooltips.properties]
    display_mode = "always"

[[tooltips]]
type = "python"
tips = [ "python", "py" ]
style = "plain"
foreground = "#fffb38"
background = "transparent"
template = " {{ .Full }}{{ if .Venv }}({{ .Venv }}){{ end }}"

  [tooltips.properties]
    display_mode = "always"

[palette]
black = '#000000'
blue = '#0000ff'
orange = '#ffa500'
white = '#ffffff'
green = '#00ff00'
